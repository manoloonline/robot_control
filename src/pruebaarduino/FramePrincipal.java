/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

package pruebaarduino;

import gnu.io.*;
import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;
import java.io.IOException;
import java.io.OutputStream;
import java.util.Enumeration;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.*;

/**
 *
 * @author Manolo
 */
public class FramePrincipal extends javax.swing.JFrame implements KeyListener{

    boolean flag = false;
    boolean marcha = true;
    
    	boolean portFound = false;
	String  defaultPort = "COM6";
        Enumeration portList;
        CommPortIdentifier portId;
        char messageString = '1';
        SerialPort serialPort;
        OutputStream outputStream = null;
        boolean	outputBufferEmptyFlag = false;

    /**
     * Creates new form FramePrincipal
     */
    
    public FramePrincipal(String s) {
        super(s);
        initComponents();
        iniciarCom();
        groupButton();
        addKeyListener(this);
        jLabel1.setVisible(false);
        
   
        //Definici√≥n de parametros 

    }
 
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jSlider1 = new javax.swing.JSlider();
        jLabel1 = new javax.swing.JLabel();
        jSlider2 = new javax.swing.JSlider();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(469, 303));

        jToggleButton1.setText("Luz");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton3.setSelected(true);
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jRadioButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton5ActionPerformed(evt);
            }
        });

        jSlider1.setMajorTickSpacing(25);
        jSlider1.setMinorTickSpacing(25);
        jSlider1.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider1.setPaintTicks(true);
        jSlider1.setSnapToTicks(true);
        jSlider1.setValue(0);
        jSlider1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider1StateChanged(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagenes/bombilla_peq.jpg"))); // NOI18N

        jSlider2.setMaximum(1);
        jSlider2.setMinimum(-1);
        jSlider2.setMinorTickSpacing(1);
        jSlider2.setOrientation(javax.swing.JSlider.VERTICAL);
        jSlider2.setPaintTicks(true);
        jSlider2.setValue(0);
        jSlider2.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jSlider2.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jSlider2StateChanged(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jToggleButton1)
                    .addComponent(jLabel1))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton2))
                    .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jRadioButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton4)
                        .addGap(18, 18, 18)
                        .addComponent(jRadioButton5)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(jSlider2, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton5)
                    .addComponent(jToggleButton1))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

public void iniciarCom() {

	portList = CommPortIdentifier.getPortIdentifiers();

	while (portList.hasMoreElements()) {
	    portId = (CommPortIdentifier) portList.nextElement();

	    if (portId.getPortType() == CommPortIdentifier.PORT_SERIAL) {

		if (portId.getName().equals(defaultPort)) {
		    System.out.println("Found port " + defaultPort);

		    portFound = true;

		    try {
			serialPort = 
			    (SerialPort) portId.open("SimpleWrite", 2000);
		    } catch (PortInUseException e) {
			System.out.println("Port in use.");

			continue;
		    } 

		    try {
			outputStream = serialPort.getOutputStream();
		    } catch (IOException e) {}

		    try {
			serialPort.setSerialPortParams(9600, 
						       SerialPort.DATABITS_8, 
						       SerialPort.STOPBITS_1, 
						       SerialPort.PARITY_NONE);
		    } catch (UnsupportedCommOperationException e) {}
	

		    try {
		    	serialPort.notifyOnOutputEmpty(true);
		    } catch (Exception e) {
			System.out.println("Error setting event notification");
			System.out.println(e.toString());
			System.exit(-1);
		    }
		    try {
		       Thread.sleep(20);  // Be sure data is xferred before closing
		    } catch (Exception e) {}
		} 
	    } 
	} 

	if (!portFound) {
	    System.out.println("port " + defaultPort + " not found.");
	} 
    } 
    
    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        //asignamos los parametros al objeto com1  
        try{

        if(flag){
            jLabel1.setVisible(false);
            flag = false;
            //envio de cadena de caracteres de apagado
	    //System.out.println("Writing 1 to "+serialPort.getName());

	    try {
		outputStream.write('2');
	    } catch (IOException e) {}



        }else{
            jLabel1.setVisible(true);
            flag = true;
            //envio de cadena de caracteres de encendido
	    //System.out.println("Writing 0 to "+serialPort.getName());

	    try {
		outputStream.write('1');
	    } catch (IOException e) {}

        }

        }catch(Exception e){
            Logger.getLogger(FramePrincipal.class.getName()).log(Level.SEVERE, null, e);

        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
            try {
		outputStream.write('5');
	    } catch (IOException e) {}
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
            try {
		outputStream.write('3');
	    } catch (IOException e) {}
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
            try {
		outputStream.write('4');
	    } catch (IOException e) {}
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
            try {
		outputStream.write('6');
	    } catch (IOException e) {}
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jRadioButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton5ActionPerformed
        // TODO add your handling code here:
            try {
		outputStream.write('7');
	    } catch (IOException e) {}
    }//GEN-LAST:event_jRadioButton5ActionPerformed

    private void jSlider1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider1StateChanged
        // TODO add your handling code here:
        if(jSlider1.getValue()==100){
            try {
		outputStream.write('8');
	    } catch (IOException e) {}
        }else{
            if(jSlider1.getValue()==75){
                try {
                    outputStream.write('9');
                } catch (IOException e) {}
            }else{
                if(jSlider1.getValue()==50){
                    try {
                        outputStream.write('a');
                } catch (IOException e) {}
                }else{
                    if(jSlider1.getValue()==25){
                        try {
                            outputStream.write('b');
                    } catch (IOException e) {}
                    }else{
                        if(jSlider1.getValue()==0){
                            try {
                                outputStream.write('c');
                            } catch (IOException e) {}
                        }
                    }
                }
            }
        }
    }//GEN-LAST:event_jSlider1StateChanged

    private void jSlider2StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jSlider2StateChanged
        if(jSlider2.getValue()==0){
            try {
		outputStream.write('f');
	    } catch (IOException e) {}
        }else{
            if(jSlider2.getValue()==-1){
                try {
                    outputStream.write('d');
                } catch (IOException e) {}
            }else{
                try {
                    outputStream.write('e');
                } catch (IOException e) {}
                
            }
        }
    }//GEN-LAST:event_jSlider2StateChanged
    
    private void groupButton( ) {

        ButtonGroup bg1 = new ButtonGroup( );

        bg1.add(jRadioButton1);
        bg1.add(jRadioButton2);
        bg1.add(jRadioButton3);
        bg1.add(jRadioButton4);
        bg1.add(jRadioButton5);

    }

     @Override
            public void keyTyped(KeyEvent e){
                
            }
                    
            @Override
            public void keyPressed(KeyEvent ke) {
            //    throw new UnsupportedOperationException("Not supported yet.");
             int valor = 0;
             switch(ke.getKeyCode()){
                 case KeyEvent.VK_SPACE:
                     jToggleButton1.doClick();
                   break;
                 case KeyEvent.VK_A:
                     valor = jSlider1.getValue();
                     jSlider1.setValue(valor+25);
                   break;
                 case KeyEvent.VK_Z:
                     valor = jSlider1.getValue();
                     jSlider1.setValue(valor-25);
                   break;
                 case KeyEvent.VK_UP:
                     valor = jSlider2.getValue();
                     jSlider2.setValue(valor+1);
                   break;
                 case KeyEvent.VK_DOWN:
                     valor = jSlider2.getValue();
                     jSlider2.setValue(valor-1);
                   break;
                 case KeyEvent.VK_LEFT:
                     if(jRadioButton2.isSelected()){
                         jRadioButton1.doClick();
                     }
                     if(jRadioButton3.isSelected()){
                         jRadioButton2.doClick();
                     }
                     if(jRadioButton4.isSelected()){
                         jRadioButton3.doClick();
                     }
                     if(jRadioButton5.isSelected()){
                         jRadioButton4.doClick();
                     }
                   break;
                 case KeyEvent.VK_RIGHT:
                     if(jRadioButton1.isSelected()){
                         jRadioButton2.doClick();
                         break;
                     }
                     if(jRadioButton2.isSelected()){
                         jRadioButton3.doClick();
                         break;
                     }
                     if(jRadioButton3.isSelected()){
                         jRadioButton4.doClick();
                         break;
                     }
                     if(jRadioButton4.isSelected()){
                         jRadioButton5.doClick();
                         break;
                     }
                   break;
             }
            }

            @Override
            public void keyReleased(KeyEvent ke) {
                
            }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JSlider jSlider2;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
